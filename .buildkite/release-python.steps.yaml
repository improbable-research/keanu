---
# Generated by <circle ci pipeline new>; this file *should* be edited manually to add or modify steps.
#
# Steps are executed based on the version in version control, and so you *do not* need to upload changes to BuildKite, just
#  commit them and send a PR to GitHub as you normally would.
#
# You may find the example pipeline steps listed here helpful: https://buildkite.com/docs/pipelines/defining-steps#example-pipeline but please
#  note that the setup is already done, so you should not manually adjust anything through the BuildKite interface.
#
common: &common
  agents:
    - "capable_of_building=graphos-eng"
    - "environment=production"
    - "permission_set=builder"
    - "platform=linux"
    - "queue=${CI_BUILDER_QUEUE:-v2-1550668667-a9410887d4b815dd-------z}"
  timeout_in_minutes: 60 # TODO(ENG-548): reduce timeout once agent-cold-start is optimised.
  retry:
    automatic:
        # This is designed to trap and retry failures because agent lost connection. Agent exits with -1 in this case.
      - exit_status: -1
        limit: 3

# NOTE: step labels turn into commit-status names like {org}/{repo}/{pipeline}/{step-label}, lower-case and hyphenated.
# These are then relied on to have stable names by other things, so once named, please beware renaming has consequences.

steps:
  - label: "Build Python distribution"
    command: "bash ./ci/build_python.sh"
    artifact_paths:
      - "keanu-python/dist/*"
    <<: *common

  - wait

  - block: "PyPi test release :rocket:"

  - label: "Release to PyPi test"
    command: "bash ./ci/release_python.sh test ci"
    <<: *common

  - block: "PyPi real release :rocket:"

  - label: "Release to PyPi real"
    command: "bash ./ci/release_python.sh real ci"
    <<: *common
